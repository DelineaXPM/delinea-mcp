---
version: 2
project_name: delinea-mcp

env:
  - DELINEA_MCP_VERSION={{ .Version }}
  - DELINEA_BUILD_TIMESTAMP={{ .Timestamp }}

builds:
  - id: mcp-python-wheel
    skip: true
    # TODO: Configure Python wheel building with uv when goreleaser supports uv builder
    # For now, use GitHub Actions to build Python packages

  - id: mcp-python-dist
    skip: true
    # TODO: Configure Python sdist building with uv when goreleaser supports uv builder
    # For now, use GitHub Actions to build Python packages

archives:
  - id: delinea-mcp-dist
    # TODO: Re-enable when Python builds are configured
    # builds:
    #   - mcp-python-wheel
    #   - mcp-python-dist
    name_template: >-
      delinea-mcp_
      {{- .Version }}_
      {{- if eq .Os "darwin" }}macOS
      {{- else }}{{ .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}x64
      {{- else if eq .Arch "386" }}x32
      {{- else }}{{ .Arch }}{{ end }}
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - requirements.txt
      - docs/**/*
      - src: config.json
        dst: config.json.template

# TODO: Re-enable Docker builds when Python packaging is ready
# dockers:
#   - ids:
#       - mcp-python-wheel
#     image_templates:
#       - "quay.io/delinea/delinea-mcp:{{ .Version }}"
#       - "quay.io/delinea/delinea-mcp:latest"
#     dockerfile: Dockerfile
#     build_flag_templates:
#       - "--pull"
#       - "--label=io.delinea.mcp.version={{.Version}}"
#       - "--label=io.delinea.mcp.revision={{.FullCommit}}"
#       - "--label=io.delinea.mcp.built={{.Date}}"
#       - "--label=org.opencontainers.image.title=Delinea MCP Server"
#       - "--label=org.opencontainers.image.description=MCP server for Delinea Secret Server and Platform APIs"
#       - "--platform=linux/amd64"

checksum:
  name_template: 'delinea-mcp_{{ .Version }}_checksums.txt'
  algorithm: sha256

release:
  github:
    owner: DelineaXPM
    name: delinea-mcp
  draft: false
  prerelease: auto
  name_template: 'Delinea MCP {{ .Tag }}'
  header: |
    ## Delinea MCP Server Release {{ .Tag }}

    This release contains the Delinea MCP server for integrating with Secret Server and Platform APIs.

    ### Installation

    ```bash
    # Docker
    docker run --rm -p 8000:8000 quay.io/delinea/delinea-mcp:{{ .Tag }}

    # Python Package
    pip install delinea-mcp=={{ .Tag }}
    ```

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - 'Merge pull request'
      - 'Merge branch'
  groups:
    - title: 'üöÄ New Features'
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
    - title: 'üêõ Bug Fixes'
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
    - title: 'üîí Security Updates'
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 2
    - title: 'ü§ñ Build & CI'
      regexp: '^.*?(build|ci)(\(.+\))??!?:.+$'
      order: 3
    - title: 'üìö Documentation'
      regexp: '^.*?docs?(\(.+\))??!?:.+$'
      order: 4
    - title: 'üîß Other Changes'
      order: 999
# TODO: Enable PyPI publishing after configuring repository secrets
# Uncomment and configure PYPI_API_TOKEN in repository secrets
# after:
#   - cmd: "uv publish --token {{ .Env.PYPI_API_TOKEN }} dist/*.whl dist/*.tar.gz"
#     if: "{{ and .IsRelease (not .Prerelease) }}"
#     env:
#       - UV_PUBLISH_URL=https://upload.pypi.org/legacy/

# TODO: Add Slack/Teams notification after configuring webhook
# announce:
#   slack:
#     enabled: true
#     message_template: 'Delinea MCP {{ .Tag }} has been released! {{ .ReleaseURL }}'
